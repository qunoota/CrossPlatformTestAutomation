# Maven
# Build Java project and run tests with Apache Maven.

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

steps:
# Step to install Node.js to support JSON server
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'  # Use a compatible Node.js version
  displayName: 'Install Node.js'

# Step to install JSON Server globally
- script: npm install -g json-server
  displayName: 'Install JSON Server'

# Step to start JSON Server in the background on Windows
- script: |
    start /b json-server --watch $(System.DefaultWorkingDirectory)/db.json --port 3000
  displayName: 'Start JSON Server'

# Set ANDROID_HOME explicitly
- script: |
    echo "Setting ANDROID_HOME..."
    set ANDROID_HOME=C:\Users\qunoot.ahmed\Documents\Android
    set PATH=%ANDROID_HOME%\emulator;%ANDROID_HOME%\platform-tools;%PATH%
  displayName: 'Set ANDROID_HOME and PATH'

# Confirm environment variables and paths
- script: |
    echo "ANDROID_HOME is set to %ANDROID_HOME%"
    echo "PATH is set to %PATH%"
    echo "Checking if emulator and adb are accessible"
    dir "%ANDROID_HOME%\emulator"
    dir "%ANDROID_HOME%\platform-tools"
  displayName: 'Confirm Environment Setup'

# Install system image and create AVD if not available
- script: |
    echo "Checking if AVD Pixel_2_API_33 exists..."
    "%ANDROID_HOME%\cmdline-tools\latest\bin\avdmanager" list avd
    if not exist "%USERPROFILE%\.android\avd\Pixel_2_API_33.avd" (
      echo "AVD Pixel_2_API_33 not found, creating AVD..."
      echo no | "%ANDROID_HOME%\cmdline-tools\latest\bin\avdmanager" create avd -n Pixel_2_API_33 -k "system-images;android-33;google_apis_playstore;x86_64" --device "pixel"
    ) else (
      echo "AVD Pixel_2_API_33 already exists."
    )
  displayName: 'Create AVD Pixel_2_API_33 if Not Exists'

# Start Android Emulator with Full Path
- script: |
    echo "Starting Android emulator with full path..."
    "%ANDROID_HOME%\emulator\emulator" -avd Pixel_2_API_33 -no-audio -no-window &
    "%ANDROID_HOME%\platform-tools\adb" wait-for-device
  displayName: 'Start Android Emulator with Full Path'

# Maven build and test
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx1024m'  # Optional: Set memory limit for Maven
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '17'  # Matches the Java version in your pom.xml
    jdkArchitectureOption: 'x64'
    goals: 'clean install'
  displayName: 'Build with Maven'

# Publish test results
- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/TEST-*.xml'  # Test result files from Maven Surefire plugin
    testRunTitle: 'Java Client Tests'
  displayName: 'Publish Test Results'

# Publish build artifacts
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/target'  # Artifacts from the build
    artifactName: 'java-client-automation-artifacts'
    publishLocation: 'pipeline'
  displayName: 'Publish Build Artifacts'