# Maven
# Build Java project and run tests with Apache Maven.

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

steps:
# Step to install Node.js to support JSON server
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'  # Use a compatible Node.js version
  displayName: 'Install Node.js'

# Step to install JSON Server globally
- script: npm install -g json-server
  displayName: 'Install JSON Server'

# Step to start JSON Server in the background on Windows
- script: |
    start /b json-server --watch $(System.DefaultWorkingDirectory)/db.json --port 3000
  displayName: 'Start JSON Server'

# Step to set ANDROID_HOME and update PATH to include Android SDK tools
- script: |
    echo "Setting up Android SDK environment variables..."
    setx ANDROID_HOME "C:\Users\qunoot.ahmed\Documents\Android" /M
    setx PATH "%ANDROID_HOME%\emulator;%ANDROID_HOME%\platform-tools;%ANDROID_HOME%\tools;%ANDROID_HOME%\tools\bin;%PATH%" /M
  displayName: 'Setup Android SDK Environment Variables Globally'

# Restart shell session to apply environment variables
- powershell: |
    Write-Host "Restarting shell session to apply environment variables"
    $env:PATH = [System.Environment]::GetEnvironmentVariable("Path", [System.EnvironmentVariableTarget]::Machine)
  displayName: 'Reload Environment Variables'

# Step to start the Android emulator
- script: |
    echo "Starting Android emulator..."
    emulator -avd Pixel_2_API_33 -no-audio -no-window &
    adb wait-for-device
  displayName: 'Start Android Emulator'

# Maven build and test
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx1024m'  # Optional: Set memory limit for Maven
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '17'  # Matches the Java version in your pom.xml
    jdkArchitectureOption: 'x64'
    goals: 'clean install'
  displayName: 'Build with Maven'

# Publish test results
- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/TEST-*.xml'  # Test result files from Maven Surefire plugin
    testRunTitle: 'Java Client Tests'
  displayName: 'Publish Test Results'

# Publish build artifacts
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/target'  # Artifacts from the build
    artifactName: 'java-client-automation-artifacts'
    publishLocation: 'pipeline'
  displayName: 'Publish Build Artifacts'